{"version":3,"sources":["formatters.js","be-frontend-components.min.js","beTable.jsx"],"names":["formatters","ns","dateRenderer","date","format","isString","value","int","str","parseInt","isNumber","isDate","toString","call","concat","array1","array2","index","slice","padNumber","num","digits","trim","neg","length","substr","dateGetter","name","size","offset","ampmGetter","formats","getHours","AMPMS","timeZoneGetter","zone","getTimezoneOffset","paddedZone","Math","abs","dateStrGetter","shortForm","get","uppercase","jsonStringToDate","string","match","R_ISO8601_STR","Date","tzHour","tzMin","dateSetter","setUTCFullYear","setFullYear","timeSetter","setUTCHours","setHours","h","m","s","ms","round","parseFloat","formatter","fn","text","parts","$locale","DATETIME_FORMATS","NUMBER_STRING","test","DATE_FORMATS_SPLIT","exec","pop","push","_","each","DATE_FORMATS","replace","Object","prototype","toUpperCase","MONTH","split","SHORTMONTH","DAY","SHORTDAY","medium","short","fullDate","longDate","mediumDate","shortDate","mediumTime","shortTime","yyyy","yy","y","MMMM","MMM","MM","M","dd","d","HH","H","hh","mm","ss","sss","EEEE","EEE","a","Z","numberRenderer","number","fractionSize","noCommas","formatNumber","pattern","groupSep","decimalSep","noGroupSep","isFinite","isObject","isNegative","numStr","formatedText","hasExponent","indexOf","toFixed","fractionLen","DECIMAL_SEP","isUndefined","min","max","minFrac","maxFrac","fraction","whole","i","pos","lgroup","lgSize","group","gSize","charAt","negPre","posPre","negSuf","posSuf","join","minInt","React","window","BETable","createClass","displayName","propTypes","columns","PropTypes","array","isRequired","rows","callback","func","searchmeta","object","objectname","customRenderers","getDefaultProps","getRenderers","rendererDefaults","renderer","rendererArgs","assign","this","props","getInitialState","selectedColumn","ascending","searchFilters","currentPage","numberPerPage","selectedRows","handleColumnClick","e","obj","state","setState","eventType","handleFilterChange","val","column","previousState","currentProps","sort_column","paginationCallback","rowCallback","row","render","map","c","createElement","Column","key","handleClick","selectedState","bind","SearchFilter","handleChange","r","Row","renderers","id","numberOfObjects","totalMatchCount","number_matching_search","className","TableFooter","objectName","classString","onClick","title","noop","input","target","thClassString","inputClassString","type","placeholder","onChange","sorted","Cell","bool","cellValue","has","apply","numberPerPageOptions","changePagination","numberOfPages","ceil","nextPage","prevPage","options","opt","pageStart","pageEnd","prevDisabled","prevStyle","cursor","nextDisabled","nextStyle","style","BE","react"],"mappings":"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","file":"be-frontend-components.min.js","sourcesContent":["/* jshint ignore:start */\n\nvar formatters = {};\n\n(function (ns){\n  /**\n   * @ngdoc filter\n   * @name date\n   * @kind function\n   *\n   * @description\n   *   Formats `date` to a string based on the requested `format`.\n   *\n   *   `format` string can be composed of the following elements:\n   *\n   *   * `'yyyy'`: 4 digit representation of year (e.g. AD 1 => 0001, AD 2010 => 2010)\n   *   * `'yy'`: 2 digit representation of year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)\n   *   * `'y'`: 1 digit representation of year, e.g. (AD 1 => 1, AD 199 => 199)\n   *   * `'MMMM'`: Month in year (January-December)\n   *   * `'MMM'`: Month in year (Jan-Dec)\n   *   * `'MM'`: Month in year, padded (01-12)\n   *   * `'M'`: Month in year (1-12)\n   *   * `'dd'`: Day in month, padded (01-31)\n   *   * `'d'`: Day in month (1-31)\n   *   * `'EEEE'`: Day in Week,(Sunday-Saturday)\n   *   * `'EEE'`: Day in Week, (Sun-Sat)\n   *   * `'HH'`: Hour in day, padded (00-23)\n   *   * `'H'`: Hour in day (0-23)\n   *   * `'hh'`: Hour in am/pm, padded (01-12)\n   *   * `'h'`: Hour in am/pm, (1-12)\n   *   * `'mm'`: Minute in hour, padded (00-59)\n   *   * `'m'`: Minute in hour (0-59)\n   *   * `'ss'`: Second in minute, padded (00-59)\n   *   * `'s'`: Second in minute (0-59)\n   *   * `'.sss' or ',sss'`: Millisecond in second, padded (000-999)\n   *   * `'a'`: am/pm marker\n   *   * `'Z'`: 4 digit (+sign) representation of the timezone offset (-1200-+1200)\n   *\n   *   `format` string can also be one of the following predefined\n   *   {@link guide/i18n localizable formats}:\n   *\n   *   * `'medium'`: equivalent to `'MMM d, y h:mm:ss a'` for en_US locale\n   *     (e.g. Sep 3, 2010 12:05:08 pm)\n   *   * `'short'`: equivalent to `'M/d/yy h:mm a'` for en_US  locale (e.g. 9/3/10 12:05 pm)\n   *   * `'fullDate'`: equivalent to `'EEEE, MMMM d,y'` for en_US  locale\n   *     (e.g. Friday, September 3, 2010)\n   *   * `'longDate'`: equivalent to `'MMMM d, y'` for en_US  locale (e.g. September 3, 2010)\n   *   * `'mediumDate'`: equivalent to `'MMM d, y'` for en_US  locale (e.g. Sep 3, 2010)\n   *   * `'shortDate'`: equivalent to `'M/d/yy'` for en_US locale (e.g. 9/3/10)\n   *   * `'mediumTime'`: equivalent to `'h:mm:ss a'` for en_US locale (e.g. 12:05:08 pm)\n   *   * `'shortTime'`: equivalent to `'h:mm a'` for en_US locale (e.g. 12:05 pm)\n   *\n   *   `format` string can contain literal values. These need to be escaped by surrounding with single quotes (e.g.\n   *   `\"h 'in the morning'\"`). In order to output a single quote, escape it - i.e., two single quotes in a sequence\n   *   (e.g. `\"h 'o''clock'\"`).\n   *\n   * @param {(Date|number|string)} date Date to format either as Date object, milliseconds (string or\n   *    number) or various ISO 8601 datetime string formats (e.g. yyyy-MM-ddTHH:mm:ss.sssZ and its\n   *    shorter versions like yyyy-MM-ddTHH:mmZ, yyyy-MM-dd or yyyyMMddTHHmmssZ). If no timezone is\n   *    specified in the string input, the time is considered to be in the local timezone.\n   * @param {string=} format Formatting rules (see Description). If not specified,\n   *    `mediumDate` is used.\n   * @returns {string} Formatted string or the input if input is not recognized as date/millis.\n   *\n   * @example\n     <example>\n       <file name=\"index.html\">\n         <span ng-non-bindable>{{1288323623006 | date:'medium'}}</span>:\n             <span>{{1288323623006 | date:'medium'}}</span><br>\n         <span ng-non-bindable>{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}</span>:\n            <span>{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}</span><br>\n         <span ng-non-bindable>{{1288323623006 | date:'MM/dd/yyyy @ h:mma'}}</span>:\n            <span>{{'1288323623006' | date:'MM/dd/yyyy @ h:mma'}}</span><br>\n         <span ng-non-bindable>{{1288323623006 | date:\"MM/dd/yyyy 'at' h:mma\"}}</span>:\n            <span>{{'1288323623006' | date:\"MM/dd/yyyy 'at' h:mma\"}}</span><br>\n       </file>\n       <file name=\"protractor.js\" type=\"protractor\">\n         it('should format date', function() {\n           expect(element(by.binding(\"1288323623006 | date:'medium'\")).getText()).\n              toMatch(/Oct 2\\d, 2010 \\d{1,2}:\\d{2}:\\d{2} (AM|PM)/);\n           expect(element(by.binding(\"1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'\")).getText()).\n              toMatch(/2010\\-10\\-2\\d \\d{2}:\\d{2}:\\d{2} (\\-|\\+)?\\d{4}/);\n           expect(element(by.binding(\"'1288323623006' | date:'MM/dd/yyyy @ h:mma'\")).getText()).\n              toMatch(/10\\/2\\d\\/2010 @ \\d{1,2}:\\d{2}(AM|PM)/);\n           expect(element(by.binding(\"'1288323623006' | date:\\\"MM/dd/yyyy 'at' h:mma\\\"\")).getText()).\n              toMatch(/10\\/2\\d\\/2010 at \\d{1,2}:\\d{2}(AM|PM)/);\n         });\n       </file>\n     </example>\n   */\n  function dateRenderer(date, format) {\n    var toString = Object.prototype.toString;\n    var slice = [].slice;\n    function isString(value){return typeof value === 'string';}\n    function int(str) {\n      return parseInt(str, 10);\n    }\n    function isNumber(value){return typeof value === 'number';}\n    function isDate(value) {\n      return toString.call(value) === '[object Date]';\n    }\n    function concat(array1, array2, index) {\n      return array1.concat(slice.call(array2, index));\n    }\n    var uppercase = function(string){return isString(string) ? string.toUpperCase() : string;};\n    function padNumber(num, digits, trim) {\n      var neg = '';\n      if (num < 0) {\n        neg =  '-';\n        num = -num;\n      }\n      num = '' + num;\n      while(num.length < digits) {\n        num = '0' + num;\n      }\n      if (trim) {\n        num = num.substr(num.length - digits);\n      }\n      return neg + num;\n    }\n\n    function dateGetter(name, size, offset, trim) {\n      offset = offset || 0;\n      return function(date) {\n        var value = date['get' + name]();\n        if (offset > 0 || value > -offset){\n          value += offset;\n        }\n        if (value === 0 && offset === -12 ) {\n          value = 12;\n        }\n        return padNumber(value, size, trim);\n      };\n    }\n    function ampmGetter(date, formats) {\n      return date.getHours() < 12 ? formats.AMPMS[0] : formats.AMPMS[1];\n    }\n    function timeZoneGetter(date) {\n      var zone = -1 * date.getTimezoneOffset();\n      var paddedZone = (zone >= 0) ? \"+\" : \"\";\n\n      paddedZone += padNumber(Math[zone > 0 ? 'floor' : 'ceil'](zone / 60), 2) +\n                    padNumber(Math.abs(zone % 60), 2);\n\n      return paddedZone;\n    }\n\n    function dateStrGetter(name, shortForm) {\n      return function(date, formats) {\n        var value = date['get' + name]();\n        var get = uppercase(shortForm ? ('SHORT' + name) : name);\n\n        return formats[get][value];\n      };\n    }\n    var $locale = $locale || {};\n    $locale.DATETIME_FORMATS = {\n      MONTH:\n          'January,February,March,April,May,June,July,August,September,October,November,December'\n          .split(','),\n      SHORTMONTH:  'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'.split(','),\n      DAY: 'Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday'.split(','),\n      SHORTDAY: 'Sun,Mon,Tue,Wed,Thu,Fri,Sat'.split(','),\n      AMPMS: ['AM','PM'],\n      medium: 'MMM d, y h:mm:ss a',\n      short: 'M/d/yy h:mm a',\n      fullDate: 'EEEE, MMMM d, y',\n      longDate: 'MMMM d, y',\n      mediumDate: 'MMM d, y',\n      shortDate: 'M/d/yy',\n      mediumTime: 'h:mm:ss a',\n      shortTime: 'h:mm a'\n    };\n    var DATE_FORMATS = {\n      yyyy: dateGetter('FullYear', 4),\n        yy: dateGetter('FullYear', 2, 0, true),\n         y: dateGetter('FullYear', 1),\n      MMMM: dateStrGetter('Month'),\n       MMM: dateStrGetter('Month', true),\n        MM: dateGetter('Month', 2, 1),\n         M: dateGetter('Month', 1, 1),\n        dd: dateGetter('Date', 2),\n         d: dateGetter('Date', 1),\n        HH: dateGetter('Hours', 2),\n         H: dateGetter('Hours', 1),\n        hh: dateGetter('Hours', 2, -12),\n         h: dateGetter('Hours', 1, -12),\n        mm: dateGetter('Minutes', 2),\n         m: dateGetter('Minutes', 1),\n        ss: dateGetter('Seconds', 2),\n         s: dateGetter('Seconds', 1),\n         // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n         // we can be just safely rely on using `sss` since we currently don't support single or two digit fractions\n       sss: dateGetter('Milliseconds', 3),\n      EEEE: dateStrGetter('Day'),\n       EEE: dateStrGetter('Day', true),\n         a: ampmGetter,\n         Z: timeZoneGetter\n    };\n\n    var DATE_FORMATS_SPLIT = /((?:[^yMdHhmsaZE']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|d+|H+|h+|m+|s+|a|Z))(.*)/,\n        NUMBER_STRING = /^\\-?\\d+$/;\n    var R_ISO8601_STR = /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n                       // 1        2       3         4          5          6          7          8  9     10      11\n    function jsonStringToDate(string) {\n      var match;\n      if (match = string.match(R_ISO8601_STR)) {\n        var date = new Date(0),\n            tzHour = 0,\n            tzMin  = 0,\n            dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear,\n            timeSetter = match[8] ? date.setUTCHours : date.setHours;\n\n        if (match[9]) {\n          tzHour = int(match[9] + match[10]);\n          tzMin = int(match[9] + match[11]);\n        }\n        dateSetter.call(date, int(match[1]), int(match[2]) - 1, int(match[3]));\n        var h = int(match[4]||0) - tzHour;\n        var m = int(match[5]||0) - tzMin;\n        var s = int(match[6]||0);\n        var ms = Math.round(parseFloat('0.' + (match[7]||0)) * 1000);\n        timeSetter.call(date, h, m, s, ms);\n        return date;\n      }\n      return string;\n    }\n\n\n    function formatter(date, format) {\n      var text = '',\n          parts = [],\n          fn, match;\n\n      format = format || 'mediumDate';\n      format = $locale.DATETIME_FORMATS[format] || format;\n      if (isString(date)) {\n        date = NUMBER_STRING.test(date) ? int(date) : jsonStringToDate(date);\n      }\n\n      if (isNumber(date)) {\n        date = new Date(date);\n      }\n\n      if (!isDate(date)) {\n        return date;\n      }\n\n      while(format) {\n        match = DATE_FORMATS_SPLIT.exec(format);\n        if (match) {\n          parts = concat(parts, match, 1);\n          format = parts.pop();\n        } else {\n          parts.push(format);\n          format = null;\n        }\n      }\n\n      _.each(parts, function(value){\n        fn = DATE_FORMATS[value];\n        text += fn ? fn(date, $locale.DATETIME_FORMATS)\n                   : value.replace(/(^'|'$)/g, '').replace(/''/g, \"'\");\n      });\n\n      return text;\n    }\n    return formatter(date, format);\n  }\n\n\n\n\n  /**\n   * formats numbers or number strings to proper fractionSize, lifted from\n   *   AngularJS with support for removing commas, i.e. the group separator.\n   *\n   * Usage:\n   *    numberFormatter(123)\n   *    \"123\"\n   *    numberFormatter(123, 0)\n   *    \"123\"\n   *    numberFormatter(123, 1)\n   *    \"123.0\"\n   *    numberFormatter(123.11111111)\n   *    \"123.111\"\n   *    numberFormatter(123.11111111, 1)\n   *    \"123.1\"\n   *    numberFormatter(123.11, -1)\n   *    \"120\"\n   *    numberFormatter(123123, 2)\n   *    \"123,123.00\"\n   *    numberFormatter(123123)\n   *    \"123,123\"\n   *    numberFormatter(123123, 0)\n   *    \"123,123\"\n   *    numberFormatter(123123, 0, true)\n   *    \"123123\"\n   *    numberFormatter(123123, 1, true)\n   *    \"123123.0\"\n   *    numberFormatter(-123123, 0, true)\n   *    \"-123123\"\n   *\n   *\n   *\n   * @param  {number/str} number\n   * @param  {int} fractionSize\n   * @param  {bool} commas\n   * @return {str}\n   */\n  function numberRenderer(number, fractionSize, noCommas){\n    var pattern = { // Decimal Pattern\n      minInt: 1,\n      minFrac: 0,\n      maxFrac: 3,\n      posPre: '',\n      posSuf: '',\n      negPre: '-',\n      negSuf: '',\n      gSize: 3,\n      lgSize: 3\n    };\n    var groupSep = ',';\n    var decimalSep = '.';\n    var isUndefined = _.isUndefined;\n    var isObject = _.isObject;\n    var DECIMAL_SEP = '.';\n\n\n    /**\n     * lifted from AngularJS\n     */\n    function formatNumber(number, pattern, groupSep, decimalSep, fractionSize, noGroupSep) {\n      if (number === null || !isFinite(number) || isObject(number)) {\n        return '';\n      }\n\n      var isNegative = number < 0;\n      number = Math.abs(number);\n      var numStr = number + '',\n          formatedText = '',\n          parts = [];\n\n      var hasExponent = false;\n      if (numStr.indexOf('e') !== -1) {\n        var match = numStr.match(/([\\d\\.]+)e(-?)(\\d+)/);\n        if (match && match[2] === '-' && match[3] > fractionSize + 1) {\n          numStr = '0';\n          number = 0;\n        } else {\n          formatedText = numStr;\n          hasExponent = true;\n        }\n      }\n\n      if (!hasExponent) {\n        var fractionLen = (numStr.split(DECIMAL_SEP)[1] || '').length;\n\n        // determine fractionSize if it is not specified\n        if (isUndefined(fractionSize)) {\n          fractionSize = Math.min(Math.max(pattern.minFrac, fractionLen), pattern.maxFrac);\n        }\n\n        // safely round numbers in JS without hitting imprecisions of floating-point arithmetics\n        // inspired by:\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\n        number = +(Math.round(+(number.toString() + 'e' + fractionSize)).toString() + 'e' + -fractionSize);\n\n        if (number === 0) {\n          isNegative = false;\n        }\n\n        var fraction = ('' + number).split(DECIMAL_SEP);\n        var whole = fraction[0];\n        fraction = fraction[1] || '';\n\n        var i, pos = 0,\n            lgroup = pattern.lgSize,\n            group = pattern.gSize;\n\n        if (whole.length >= (lgroup + group)) {\n          pos = whole.length - lgroup;\n          for (i = 0; i < pos; i++) {\n            if ((pos - i)%group === 0 && i !== 0 && !noGroupSep) {\n              formatedText += groupSep;\n            }\n            formatedText += whole.charAt(i);\n          }\n        }\n\n        for (i = pos; i < whole.length; i++) {\n          if ((whole.length - i)%lgroup === 0 && i !== 0 && !noGroupSep) {\n            formatedText += groupSep;\n          }\n          formatedText += whole.charAt(i);\n        }\n\n        // format fraction part.\n        while(fraction.length < fractionSize) {\n          fraction += '0';\n        }\n\n        if (fractionSize && fractionSize !== \"0\") {\n          formatedText += decimalSep + fraction.substr(0, fractionSize);\n        }\n      } else {\n\n        if (fractionSize > 0 && number > -1 && number < 1) {\n          formatedText = number.toFixed(fractionSize);\n        }\n      }\n\n      parts.push(isNegative ? pattern.negPre : pattern.posPre);\n      parts.push(formatedText);\n      parts.push(isNegative ? pattern.negSuf : pattern.posSuf);\n      return parts.join('');\n    }\n    return formatNumber(number, pattern, groupSep, decimalSep, fractionSize, noCommas);\n  }\n  ns.numberRenderer = numberRenderer;\n  ns.dateRenderer = dateRenderer;\n})(formatters);\n/* jshint ignore:end */\n",null,"/**\n * BETable react component and table library\n *\n * Developer QuickStart:\n *   # install react-tools to compile beTable.jsx to beTable.js\n *   npm install -g react-tools\n *   jsx --watch --extension jsx seed/static/seed/js/jsx/ seed/static/seed/js/jsx/\n *\n * TODO:\n *   - add tests\n *   - implement rowCallback\n *   - implement selectedRows state managment\n *   - implemenet select all???\n *   - move tableCallback into search_service for ease of reuse on the seed app\n *   - extend to handle multiple types for table filter and cells: labels, ranges, year_built, extra_data!, checkbox, date, map pin icon\n *   - range filters\n *   - allow filters to be extended just like cells\n *   - move into its beFrontEndComponents\n *   - conformatters into this code at build time, i.e. make the closure at build time and put the pieces into a src dir, like d3, etc.\n *\n * Usage:\n * JS:\n *   cols = [\n *     {sort_column: 'price', title: 'Price', subtitle: '$', type: 'number'},\n *     {sort_column: 'item', title: 'Item', type: 'string'}\n *   ];\n *   rows = [{item: 'kale', price: 4.34}, {item: 'almonds', price: 5.44}];\n *   tableCallback = function (state) {console.log (state);};\n *   paginationInfo = {totalMatchCount: 2000};\n *\n * HTML:\n *   <BETable columns=\"cols\"\n *            rows=\"rows\"\n *            searchmeta=\"paginationInfo\"\n *            callback=\"tableCallback\"\n *            objectname=\"'items'\"\n *            custom-renderers=\"customRenderers\"\n *            watch-depth=\"reference\"></BETable>\n */\n\n\n/**\n * EXPERIMENTAL, but mostly working!\n * global types that can be extended via plugin\n *\n * renderer can be either a string or function to be called as a renderer.\n *\n * usage:\n *   // basic example\n *   var customRenderers = {};\n *   customRenderers.year_built = {\n *     renderer: formatters.numberRenderer,\n *     rendererArgs: [0, false]  // no decimals, no commas\n *   };\n *\n *   // custom React components cells\n *   var Label = React.createClass({displayName: \"Label\", render: function () {\n *    return React.createElement(\"span\", {className: \"label label-success\"}, this.props.labelText);\n *    }\n *   });\n *   var customRenderers = {};\n *   customRenderers.label = {\n *     renderer: function (val) {\n *       return React.createElement(Label, {labelText: val});\n *     }\n *   };\n */\n\nvar React = window.React;\n\n/** @jsx React.DOM */\nvar BETable = React.createClass({\n  propTypes: {\n    columns : React.PropTypes.array.isRequired,\n    rows : React.PropTypes.array.isRequired,\n    callback: React.PropTypes.func,\n    searchmeta: React.PropTypes.object,\n    objectname: React.PropTypes.string,\n    customRenderers: React.PropTypes.object\n  },\n  getDefaultProps: function () {\n      return {\n          objectname: 'rows',\n          customRenderers: {}\n      };\n  },\n  getRenderers: function () {\n    var rendererDefaults = {\n      number: {\n        renderer: formatters.numberRenderer,\n        rendererArgs: [0]\n      },\n      date: {\n        renderer: formatters.dateRenderer\n      }\n    };\n    return _.assign({}, rendererDefaults, this.props.customRenderers);\n  },\n  getInitialState: function () {\n    return {\n      selectedColumn: {},\n      ascending: true,\n      searchFilters: {},\n      currentPage: 1,\n      numberPerPage: 10,\n      selectedRows: []\n    };\n  },\n  handleColumnClick: function (e, obj) {\n    var ascending = (this.state.selectedColumn === obj) ? !this.state.ascending : false;\n    this.setState({\n      selectedColumn: obj,\n      ascending: ascending,\n      currentPage: 1\n    }, function () {\n      this.props.callback(this.state, {eventType: 'columnClicked'});\n    });\n  },\n  handleFilterChange: function (val, column) {\n    this.setState(function (previousState, currentProps) {\n      previousState.searchFilters[column.sort_column] = val;\n      return {searchFilters: previousState.searchFilters, currentPage: 1};\n    }, function () {\n      this.props.callback(this.state);\n    });\n  },\n  paginationCallback: function (state) {\n    this.setState(state, function () {\n      this.props.callback(this.state);\n    });\n  },\n  rowCallback: function (row) {\n    this.setState(function (previousState, currentProps) {\n      // if row in selectedRows remove, else add\n      return {};\n    }, function () {\n      this.props.callback(this.state, {eventType: 'rowClicked'});\n    });\n  },\n  render: function() {\n    var columns = this.props.columns.map(function (c) {\n        return <Column key={c.sort_column} column={c} handleClick={this.handleColumnClick} selectedState={this.state}></Column>;\n    }.bind(this));\n\n    var searchFilters = this.props.columns.map(function (c) {\n        return <SearchFilter key={c.sort_column} column={c} handleChange={this.handleFilterChange} selectedState={this.state}></SearchFilter>;\n    }.bind(this));\n\n    var rows = this.props.rows.map(function (r) {\n      return <Row row={r} columns={this.props.columns} selectedState={this.state} renderers={this.getRenderers()}key={r.id}></Row>;\n    }.bind(this));\n\n    var numberOfObjects = this.props.searchmeta.totalMatchCount || this.props.searchmeta.number_matching_search;\n\n    return (\n      <div>\n        <div className=\"vert_table_scroll_container\">\n          <table className=\"table table-striped sortable\">\n            <thead>\n              <tr>\n                {columns}\n              </tr>\n              <tr className=\"sub_head\">\n                {searchFilters}\n              </tr>\n            </thead>\n            <tbody>\n              {rows}\n            </tbody>\n          </table>\n        </div>\n        <TableFooter objectName={this.props.objectname}\n                     currentPage={this.state.currentPage}\n                     numberPerPage={this.state.numberPerPage}\n                     numberOfObjects={numberOfObjects}\n                     paginationCallback={this.paginationCallback}> </TableFooter>\n      </div>\n    );\n  }\n});\n\n\nvar Column = React.createClass({\n  propTypes: {\n    column : React.PropTypes.object.isRequired,\n    handleClick: React.PropTypes.func,\n    selectedState: React.PropTypes.object.isRequired\n  },\n  handleClick: function (e) {\n    this.props.handleClick(e, this.props.column);\n  },\n  render: function() {\n    var classString = \"column_head scroll_columns\";\n    if (this.props.column === this.props.selectedState.selectedColumn) {\n      classString += \" sorted\";\n      if (this.props.selectedState.ascending) {\n        classString += \" sort_asc\";\n      } else {\n        classString += \" sort_desc\";\n      }\n    }\n    return (\n      <th className={classString} onClick={this.handleClick}>\n        {this.props.column.title}\n      </th>\n    );\n  }\n});\n\n/**\n * SearchFilter: the filter sub header\n * TODO:\n *  - add range filter if column type is date or number or custom\n *  - add date picker to date filter\n *  - add checkbox and checkbox logic (involves checkbox header)\n *  - prevent searching on checkbox column?\n *  - add blank and protected filters\n */\nvar SearchFilter = React.createClass({\n  propTypes: {\n    column : React.PropTypes.object.isRequired,\n    handleChange: React.PropTypes.func,\n    selectedState: React.PropTypes.object.isRequired\n  },\n  getDefaultProps: function () {\n      return {\n        handleChange: _.noop\n      };\n  },\n  getInitialState: function() {\n    return {input: \"\"};\n  },\n  handleChange: function (e) {\n    this.setState({\n      input: e.target.value\n    });\n    this.props.handleChange(e.target.value, this.props.column);\n  },\n  render: function() {\n    var thClassString = \"sub_head scroll_columns\";\n    var inputClassString = \"form-control input-sm show\";\n    if (this.props.column === this.props.selectedState.selectedColumn) {\n      thClassString += \" sorted\";\n    }\n    if (this.state.input !== \"\") {\n      inputClassString += \" active\";\n    }\n    return (\n      <th className={thClassString}>\n        <input type=\"text\" className={inputClassString}  placeholder={this.props.column.title} onChange={this.handleChange} />\n      </th>\n    );\n  }\n});\n\nvar Row = React.createClass({\n  propTypes: {\n    row : React.PropTypes.object.isRequired,\n    columns : React.PropTypes.array.isRequired,\n    selectedState: React.PropTypes.object.isRequired,\n    renderers: React.PropTypes.object.isRequired\n  },\n  render: function() {\n    var row = this.props.columns.map(function (c) {\n      var sorted = c === this.props.selectedState.selectedColumn;\n      return <Cell column={c} row={this.props.row} sorted={sorted} renderers={this.props.renderers}/>;\n    }.bind(this));\n    return (\n      <tr>\n        {row}\n      </tr>\n    );\n  }\n});\n\n/**\n * Cell: table row cell: `td`\n *   Allows custom React elements to be returned if set in BETable.types\n */\nvar Cell = React.createClass({\n  propTypes: {\n    column: React.PropTypes.object.isRequired,\n    row: React.PropTypes.object.isRequired,\n    sorted: React.PropTypes.bool,\n    renderers: React.PropTypes.object.isRequired\n  },\n  render: function () {\n    var renderer, rendererArgs;\n    var classString = \"scroll_columns is_aligned_left\";\n    if (this.props.sorted) {\n      classString += \" sorted\";\n    }\n    var cellValue = this.props.row[this.props.column.sort_column];\n    var type = this.props.column.type || \"string\";\n\n    /// REMOVE BELOW HERE IN PRODUCTION (comment in with label demo and a colunn of Property Id to see in action)\n    // if (this.props.column.sort_column === \"Audit Group\") {\n    //   type = \"label\";\n    // }\n    /// REMOVE ABOVE HERE\n\n    // this is a magical 3 lines of code\n    if (_.has(this.props.renderers, type)) {\n      renderer = this.props.renderers[type].renderer;\n      rendererArgs = [].concat([cellValue], this.props.renderers[type].rendererArgs || []);\n      cellValue = renderer.apply(null, rendererArgs);\n    }\n    return (\n      <td className={classString}>{cellValue}</td>\n    );\n  }\n});\n\n/**\n * pagination footer\n */\nvar TableFooter = React.createClass({\n  propTypes: {\n      numberPerPageOptions: React.PropTypes.array,\n      numberPerPage: React.PropTypes.number,\n      currentPage: React.PropTypes.number,\n      numberOfObjects: React.PropTypes.number,\n      paginationCallback: React.PropTypes.func\n  },\n  getDefaultProps: function () {\n    return {\n      numberPerPageOptions: [10, 25, 50, 100]\n    };\n  },\n  changePagination: function (r) {\n    this.props.paginationCallback({numberPerPage: +r.target.value, currentPage: 1});\n  },\n  numberOfPages: function () {\n    return Math.ceil(this.props.numberOfObjects / this.props.numberPerPage);\n  },\n  nextPage: function () {\n    if (this.props.currentPage < this.numberOfPages()) {\n      this.props.paginationCallback({currentPage: this.props.currentPage + 1});\n    }\n  },\n  prevPage: function () {\n    if (this.props.currentPage > 1) {\n      this.props.paginationCallback({currentPage: this.props.currentPage - 1});\n    }\n  },\n  render: function () {\n    var options = this.props.numberPerPageOptions.map(function (opt) {\n      return <option value={opt}>{opt}</option>;\n    }.bind(this));\n    var numberOfPages = this.numberOfPages();\n    var pageStart = ((this.props.currentPage - 1) * this.props.numberPerPage) + 1;\n    var pageEnd = (this.props.currentPage === numberOfPages) ? this.props.numberOfObjects : this.props.currentPage * this.props.numberPerPage;\n    var prevDisabled = this.props.currentPage <= 1 ? \"disabled\" : \"\";\n    var prevStyle = this.props.currentPage <= 1 ? {} : {cursor: \"pointer\"};\n    var nextDisabled = this.props.currentPage === numberOfPages ? \"disabled\" : \"\";\n    var nextStyle = this.props.currentPage === numberOfPages ? {} : {cursor: \"pointer\"};\n\n    return (\n        <div className=\"table_footer\">\n            <div className=\"display_number_entries col-sm-3 col-md-3\">\n                 <div className=\"display_number_entries_text\">Display:</div>\n                 <div className=\"display_number_entries_select\">\n                    <select className=\"form-control input-sm col-xs-2\" onChange={this.changePagination}>\n                        {options}\n                    </select>\n                </div>\n                <div className=\"display_number_entries_text\">{this.props.objectName}</div>\n            </div>\n            <div className=\"counts col-sm-6 col-md-6\">\n                <span>Showing {pageStart} to {pageEnd} of {this.props.numberOfObjects} {this.props.objectName}</span>\n            </div>\n            <div className=\"pager_container col-sm-3 col-md-3\">\n                <ul className=\"pager\">\n                  <li className={prevDisabled}><a style={prevStyle} onClick={this.prevPage}><i className=\"fa fa-angle-double-left\"></i> Previous</a></li>\n                  <li className={nextDisabled}><a style={nextStyle} onClick={this.nextPage}>Next <i className=\"fa fa-angle-double-right\"></i></a></li>\n                </ul>\n            </div>\n        </div>\n      );\n  }\n});\n// last step add the react component to the mix\nwindow.BE.react.BETable = BETable;\n\n"],"sourceRoot":"/source/"}